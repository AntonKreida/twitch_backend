# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ChangeEmailUserInput {
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeactivatedInput {
  password: String!
  token: String!
}

type DeviceModel {
  browser: String!
  os: String!
  type: String!
}

input DisableTwoFactorAuthInput {
  password: String!
}

input EnableTwoFactorAuthInput {
  pincode: String!
}

type LocationModel {
  city: String
  country: String
  latitude: Float!
  longitude: Float!
}

type MetadataModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type Mutation {
  changeEmail(changeEmailInput: ChangeEmailUserInput!): UserModel!
  changePassword(changePasswordInput: PasswordChangeInput!): Boolean!
  confirmPassword(confirmPasswordInput: PasswordConfirmInput!): Boolean!
  deactivated(deactivatedInput: DeactivatedInput!): UserModel!
  disableTwoFactorAuth(disableTwoFactorAuthInput: DisableTwoFactorAuthInput!): Boolean!
  enableTwoFactorAuth(enubleTwoFactorAuthInput: EnableTwoFactorAuthInput!): Boolean!
  recoveryPassword(inputPasswordRecovery: PasswordRecoveryInput!): Boolean!
  sendDeactivatedAccount(sendDeactivatedEmailInput: SendDeactivatedEmailInput!): Boolean!
  sendGenerateQrCode(SendGeneratedQrCodeInput: SendGeneratedQrCodeInput!): QrCodeModel!
  sendInitTwoFactorAuthentication(inputInitTwoFactorAuthentication: SendInitTwoFactorAuthenticationInput!): Boolean!
  signIn(inputUserSignIn: UserSignInInput!): UserModel!
  signOut: String!
  signUp(inputUserSignUp: UserSignUpInput!): Boolean!
  verifyPasswordRecovery(inputVerifyPasswordRecovery: VerifyPasswordRecoveryInput!): Boolean!
  verifyUser(inputVerify: VerifyInput!): Boolean!
}

input PaginationInputType {
  limit: Int
  page: Int
}

input PasswordChangeInput {
  passwordNew: String!
  passwordOld: String!
}

input PasswordConfirmInput {
  password: String!
}

input PasswordRecoveryInput {
  email: String!
}

type QrCodeModel {
  qrCode: String!
}

type Query {
  clearSession: Boolean!
  currentSession: SessionModel!
  me: UserModel!
  removeSession(id: String!): Boolean!
  session: [SessionModel!]!
  user(email: String, id: ID, username: String): UserModel
  users(pagination: PaginationInputType, sort: SORT_ENUM): [UserModel!]!
}

"""Сортировка по возрастанию/убыванию"""
enum SORT_ENUM {
  ASC
  DESC
}

input SendDeactivatedEmailInput {
  email: String!
}

input SendGeneratedQrCodeInput {
  token: String!
}

input SendInitTwoFactorAuthenticationInput {
  password: String!
}

type SessionModel {
  createAt: String!
  id: String!
  metadata: MetadataModel!
  userId: String!
}

type UserModel {
  bio: String
  createAt: DateTime!
  deactivatedAt: DateTime
  email: String!
  firstName: String!
  id: ID!
  isDeactivatedAccount: Boolean!
  isEmailVerification: Boolean!
  isTwoFactorEnable: Boolean!
  lastName: String!
  passwordHash: String!
  twoFactorSecret: String
  updateAt: DateTime!
  username: String!
}

input UserSignInInput {
  password: String!
  pincode: String
  username: String!
}

input UserSignUpInput {
  avatar: String
  bio: String
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  username: String!
}

input VerifyInput {
  token: String!
}

input VerifyPasswordRecoveryInput {
  password: String!
  passwordRepeat: String!
  token: String!
}